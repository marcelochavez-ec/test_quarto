---
title: "Análisis Factorial - BiPlot"
author: "Ing. Marcelo Chávez"
format:
  html:
    toc: true
    toc_float: true
    theme: cosmo
    fontsize: 1.1em
    linestretch: 1.7 
    grid:
      sidebar-width: 0px
      body-width: 1500px
      margin-width: 350px
      gutter-width: 1.5rem
---

# Introducción al Análisis Factorial Múltiple

## Importación de las librerías y tratamiento a los datos:

```{r, warning=FALSE, message=FALSE, echo=TRUE}
# Carga de las bibliotecas:
library(tidymodels)
library(highcharter)
library(tidyverse)
library(skimr)
library(DataExplorer)
library(ggpubr)
library(univariateML)
library(GGally)
library(doParallel)
library(jsonlite)
library(openxlsx)
library(ggplot2)
library(RPostgreSQL)
library(e1071)
library(RColorBrewer)
library(DT)
library(psych)
library(devtools)
library(ggbiplot)
source("funciones.R")

data("SaratogaHouses", package = "mosaicData")

datos <- SaratogaHouses

# Se renombran las columnas para que sean más descriptivas
colnames(datos) <- c("precio_alquiler",
                     "metros_totales", 
                     "antiguedad",
                     "precio_terreno",
                     "metros_habitables",
                     "universitarios",
                     "dormitorios",
                     "chimenea",
                     "banios",
                     "habitaciones",
                     "tipo_calefaccion", 
                     "consumo_calefaccion",
                     "desague",
                     "parques_canchas_deportivas",
                     "construccion_nueva", 
                     "linea_telefonica")

# Recodificación de valores al español:

datos <- datos %>% 
    mutate(tipo_calefaccion = case_when(
           tipo_calefaccion == "hot air" ~ "Aire acondicionado",
           tipo_calefaccion == "hot water/steam" ~ "Calefón",
           tipo_calefaccion == "electric" ~ "Ducha Eléctrica",
           TRUE ~ NA_character_),
           consumo_calefaccion = case_when(
           consumo_calefaccion =="gas" ~"Gas",
           consumo_calefaccion == "electric" ~ "Eléctrico",
           consumo_calefaccion == "oil" ~ "Diesel",
               TRUE ~ NA_character_),
           desague = case_when(
               desague == "septic" ~ "Pozo séptico",
               desague == "public/commercial" ~ "Tubería",
               desague == "none" ~ "Ninguno",
               TRUE ~ NA_character_),
           banios = case_when(
             banios %in% c(0, 1.5) ~ 1,
             banios %in% c(2.5) ~ 2,
             banios %in% c(3.5, 4, 4.5) ~ 3,
             TRUE ~ banios),
           chimenea = case_when(
             chimenea == 0 ~ "No",
             chimenea %in% c(1:4) ~ "Sí",
             TRUE ~ as.character(chimenea)),
           across(c(parques_canchas_deportivas, 
                    construccion_nueva,
                    linea_telefonica), 
                  ~ ifelse(. == "Yes", 
                           "Sí",
                           "No")),
           metros_habitables = metros_habitables/10) %>% 
  select(-metros_totales,
         -habitaciones)
```

### Las dimensiones del data frame de precios:

```{r}
num_vars <- datos %>% select_if(is.numeric)
num_cols <- ncol(num_vars)
col_names <- colnames(num_vars)
cat("Las dimensiones del df son:")
dim(datos)
cat("Las variables cuantitativas son:", num_cols, "\n") 
cat("Los nombres de las variables cuantitativas son:\n")
for (i in seq_along(col_names)) {
  cat(i, ":", col_names[i], "\n")
}
```

### La base de datos total:

```{r, warning=FALSE, message=FALSE, echo=TRUE}
DT::datatable(datos, options = list(scrollX = TRUE, pageLength = 5))
```

## Análisis Exploratorio:

### Determinante de la matriz:

```{r}
cat("El determinante de la matriz de la var numéricas es: ", det(cor(num_vars)))

```

### BoxPlot

```{r, fig.height=14, fig.width=16}
myboxplotData <- data_to_boxplot(datos
                                 
                                 ,precio_alquiler
                                 ,tipo_calefaccion
                                 ,group_var     = tipo_calefaccion
                                 ,add_outliers  = FALSE)

# Se puede incluir desde una paleta de colores en R:

cols <- brewer.pal(3, "Set2");cols


highchart()%>%
  hc_xAxis(type ="category") %>%
  hc_add_series_list(myboxplotData) %>%
  hc_xAxis(title = list(text = "Tipo de Calefacción")) %>%
  hc_yAxis(title = list(text = "Precio del Alquiler")) %>%
  hc_title(text= "Boxplot") %>% 
  hc_subtitle(text= "Precio del Alquiler") %>% 
  hc_caption(text= "Fuente: Encuesta a Sartoga 2006 - Condado de New York")%>% 
  # hc_add_theme(hc_theme_smpl()) %>%
  hc_legend(enabled= FALSE) %>% 
  hc_colors(cols)
```

### Relación entre las varibles:

```{r, fig.height=14, fig.width=16}

# Selección de las variables numéricas:

tbl_numericas <- datos %>% select_if(is.numeric)

pairs.panels(tbl_numericas,
             gap=0,
             pch=21)
```

### Matriz de correlación:

```{r, fig.height=6, fig.width=18}
plot_correlation(
  data = datos,
  type = "continuous",
  title = "Matriz de correlación variables continuas",
  theme_config = list(legend.position = "none",
                      plot.title = element_text(size = 16, face = "bold"),
                      axis.title = element_blank(),
                      axis.text.x = element_text(angle = -45, hjust = +0.1)))
```

### Split de la data:

```{r}
set.seed(123)
split_inicial <- initial_split(
  data   = datos,
  prop   = 0.8,
  strata = precio_alquiler
)
datos_train <- training(split_inicial) %>% select(precio_alquiler, antiguedad, precio_terreno, metros_habitables, universitarios, dormitorios, banios, everything())
datos_test  <- testing(split_inicial)
names(datos_train)
```


### BiPlot Preliminar

```{r}
pc <- prcomp(datos_train[,1:7],
             center = TRUE,
            scale. = TRUE)
attributes(pc)
```

```{r, fig.height=14, fig.width=18}
g <- ggbiplot(pc,
              obs.scale = 1,
              var.scale = 1,
              groups = datos_train$tipo_calefaccion,
              ellipse = TRUE,
              circle = TRUE,
              ellipse.prob = 0.68)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
               legend.position = 'top')
print(g)
```

